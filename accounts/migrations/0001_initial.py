# Generated by Django 4.2.6 on 2023-10-15 19:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Course name e.g Strength of Materials II",
                        max_length=20,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="A short code description e.g MEE203",
                        max_length=5,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        help_text="Faculty and department of the staff",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("100L", "L100"),
                            ("200L", "L200"),
                            ("300L", "L300"),
                            ("400L", "L400"),
                            ("500L", "L500"),
                            ("N/A", "Unspecified"),
                        ],
                        default="100L",
                        max_length=10,
                    ),
                ),
                (
                    "student_picture",
                    models.ImageField(upload_to="uploads/student-images"),
                ),
                (
                    "courses",
                    models.ManyToManyField(
                        related_name="students",
                        related_query_name="student",
                        to="accounts.course",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "staff_type",
                    models.CharField(
                        choices=[
                            ("LECTURER", "Lecturer"),
                            ("NON_ACADEMIC", "Non Academic"),
                            ("EMERITUS", "Emeritus"),
                            ("MANAGEMENT", "Management"),
                        ],
                        help_text="Type/nature of staff",
                        max_length=20,
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        help_text="Faculty and department of the staff",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "_user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff",
                        related_query_name="staff",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "courses",
                    models.ManyToManyField(
                        related_name="lecturers",
                        related_query_name="lecturer",
                        to="accounts.course",
                    ),
                ),
            ],
        ),
    ]
